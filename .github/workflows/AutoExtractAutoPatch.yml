name: auto extract framework Auto Modify

on:
  workflow_dispatch:
    inputs:
      URL:
        description: "Official zip Rom package download address"
        required: true
        default: 'https://bn.d.miui.com/OS2.0.5.0.VNKCNXM/vermeer-ota_full-OS2.0.5.0.VNKCNXM-user-15.0-dbbc6eb99e.zip'
      # framework_jar_url:
      #   description: 'URL to download framework.jar'
      #   required: true
      # services_jar_url:
      #   description: 'URL to download services.jar'
      #   required: true
      # miui_services_jar_url:
      #   description: 'URL to download miui-services.jar'
      #   required: true
      # miui_framework_jar_url:
      #   description: 'URL to download miui-framework.jar'
      #   required: true
      android_api_level:
        description: 'Android API level'
        required: true
        type: choice
        options:
         - 34
         - 35
        default: '35'
      core:
        description: 'Apply core patch'
        required: true
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'false'
      isCN:
        description: 'Is CN'
        required: true
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'true'
      
      # custom_device_name:
      #   description: 'Custom device name (optional)'
      #   required: false
      # custom_version:
      #   description: 'Custom version (optional)'
      #   required: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write

    steps:
    - name: Maximize your build environment
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 8192
        root-reserve-mb: 4096
        temp-reserve-mb: 4096
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt full-upgrade -y
        sudo apt install -y default-jdk zipalign p7zip-full python3 aria2
      
    # - name: Download framework.jar
    #   run: |
    #     curl -L -C - -o framework.jar "${{ github.event.inputs.framework_jar_url }}"
    # - name: Check framework.jar
    #   run: |
    #     file_size=$(stat -c%s "framework.jar")
    #     if [ $file_size -lt 2000000 ]; then
    #       echo "Error: framework.jar is too small. Download might have failed." >&2
    #       exit 1
    #     fi

    # - name: Download services.jar
    #   run: |
    #     curl -L -C - -o services.jar "${{ github.event.inputs.services_jar_url }}"
    # - name: Check services.jar
    #   run: |
    #     file_size=$(stat -c%s "services.jar")
    #     if [ $file_size -lt 2000000 ]; then
    #       echo "Error: services.jar is too small. Download might have failed." >&2
    #       exit 1
    #     fi

    # - name: Download miui-services.jar
    #   run: |
    #     curl -L -C - -o miui-services.jar "${{ github.event.inputs.miui_services_jar_url }}"
    # - name: Check miui-services.jar
    #   run: |
    #     file_size=$(stat -c%s "miui-services.jar")
    #     if [ $file_size -lt 1000000 ]; then
    #       echo "Error: miui-services.jar is too small. Download might have failed." >&2
    #       exit 1
    #     fi

    # - name: Download miui-framework.jar
    #   run: |
    #     curl -L -C - -o miui-framework.jar "${{ github.event.inputs.miui_framework_jar_url }}"
    # - name: Check miui-framework.jar
    #   run: |
    #     file_size=$(stat -c%s "miui-framework.jar")
    #     if [ $file_size -lt 1000000 ]; then
    #       echo "Error: miui-framework.jar is too small. Download might have failed." >&2
    #       exit 1
    #     fi
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Download firmware and extract
      run: |
        sudo bash "${GITHUB_WORKSPACE}/run.sh" "${{ github.event.inputs.URL }}" "${GITHUB_ENV}" "${GITHUB_WORKSPACE}"


    - name: Clone smali repository
      run: git clone --depth=1 https://github.com/JesusFreke/smali.git
    
    - name: Build smali and baksmali
      run: |
        cd smali
        ./gradlew build

    -           if [ -d "classes$i" ]; then
            java -jar smali.jar a -a ${{ github.event.inputs.android_api_level }} "classes$i" -o "framework/classes$i.dex"
          else
            echo "classes$i directory not found, skipping recompilation."
          fi
        done

    - name: Recompile services dex files
      run: |
        if [ -d services_classes ]; then
          java -jar smali.jar a -a ${{ github.event.inputs.android_api_level }} services_classes -o services/classes.dex
        else
          echo "services_classes directory not found, skipping recompilation."
        fi
        for i in {2..5}; do
          if [ -d "services_classes$i" ]; then
            java -jar smali.jar a -a ${{ github.event.inputs.android_api_level }} "services_classes$i" -o "services/classes$i.dex"
          else
            echo "services_classes$i directory not found, skipping recompilation."
          fi
        done

    - name: Recompile miui-services dex file
      run: |
        java -jar smali.jar a -a ${{ github.event.inputs.android_api_level }} miui_services_classes -o miui_services/classes.dex

    - name: Recompile miui-framework dex file
      run: |
        java -jar smali.jar a -a ${{ github.event.inputs.android_api_level }} miui_framework_classes -o miui_framework/classes.dex

    - name: Recompile framework.jar
      run: |
        cd framework
        7z a -tzip ../framework_new.zip *
        cd ..

    - name: Recompile services.jar
      run: |
        cd services
        7z a -tzip ../services_new.zip *
        cd ..

    - name: Recompile miui-services.jar
      run: |
        cd miui_services
        7z a -tzip ../miui_services_new.zip *
        cd ..

    - name: Recompile miui-framework.jar
      run: |
        cd miui_framework
        7z a -tzip ../miui_framework_new.zip *
        cd ..

    - name: Align the zips
      run: |
        zipalign -f -p -v -z 4 framework_new.zip aligned_framework.jar
        zipalign -f -p -v -z 4 services_new.zip aligned_services.jar
        zipalign -f -p -v -z 4 miui_services_new.zip aligned_miui_services.jar
        zipalign -f -p -v -z 4 miui_framework_new.zip aligned_miui_framework.jar

    - name: Copy aligned jars to Magisk module
      run: |
        mkdir -p magisk_module/system/framework
        mkdir -p magisk_module/system/system_ext/framework
        cp aligned_framework.jar magisk_module/system/framework/framework.jar
        cp aligned_services.jar magisk_module/system/framework/services.jar
        cp aligned_miui_services.jar magisk_module/system/system_ext/framework/miui-services.jar
        cp aligned_miui_framework.jar magisk_module/system/system_ext/framework/miui-framework.jar

    # - name: Create Version From Link
    #   run: |
    #     if [ -z "${{ github.event.inputs.custom_version }}" ]; then
    #       framework_url="${{ github.event.inputs.framework_jar_url }}"
    #       version=$(echo $framework_url | grep -oP '(?<=V)[^/]*(?=/system)')
    #       echo "version=${version}" >> $GITHUB_ENV
    #     else
    #       echo "version=${{ github.event.inputs.custom_version }}" >> $GITHUB_ENV
    #     fi
    #     if [ -z "${{ github.event.inputs.custom_device_name }}" ]; then
    #       framework_url="${{ github.event.inputs.framework_jar_url }}"
    #       device_name=$(echo $framework_url | grep -oP '(?<=redmi/)[^/]*(?=/-)')
    #       echo "device_name=${device_name}" >> $GITHUB_ENV
    #     else
    #       echo "device_name=${{ github.event.inputs.custom_device_name }}" >> $GITHUB_ENV
    #     fi
    #     echo "version=${version}"
    #     echo "device_name=${device_name}"

    - name: Zip Magisk module
      run: |
        cd magisk_module
        zip -r ../moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip *
        cd ..
        mkdir -p out
        chmod +w moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip
        mv moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip out/

    - name: Create Release Notes
      run: |
        echo "## Release Notes" > release_notes.txt
        echo "- Built modified jars from commit ${{ github.sha }}" >> release_notes.txt
        echo "- Version: ${{ env.version }}" >> release_notes.txt
        echo "- Core patch applied: ${{ github.event.inputs.core_patch }}" >> release_notes.txt

    - name: Upload File
      run: |
        User="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
        url2=$(curl -s https://api.gofile.io/servers | jq -r '.data.servers[0].name')
        [ -z "$url2" ] && url2="store$(( $RANDOM % 8 + 1 ))"
        LinkFile="$(curl --dns-servers '1.1.1.1' -L -N -H "$User" -F "file=@out/moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip" "https://${url2}.gofile.io/uploadFile" | jq -r .data.downloadPage)"
        echo -e "Link: $LinkFile" >> release_notes.txt
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
          artifacts: out/*
          tag: ${{ env.version }}
          name: moded_${{ env.device_name }}_${{ env.version }}
          allowUpdates: true
          makeLatest: true
          bodyFile: release_notes.txt
          token: ${{ secrets.GITHUB_TOKEN }}
